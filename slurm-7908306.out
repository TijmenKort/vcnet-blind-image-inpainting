Looking in links: https://download.pytorch.org/whl/torch_stable.html
Requirement already satisfied: torch==1.5.0+cu101 in /home/jlpkort/anaconda3/lib/python3.8/site-packages (1.5.0+cu101)
Requirement already satisfied: torchvision==0.6.0+cu101 in /home/jlpkort/anaconda3/lib/python3.8/site-packages (0.6.0+cu101)
Requirement already satisfied: future in /home/jlpkort/anaconda3/lib/python3.8/site-packages (from torch==1.5.0+cu101) (0.18.2)
Requirement already satisfied: numpy in /home/jlpkort/anaconda3/lib/python3.8/site-packages (from torch==1.5.0+cu101) (1.17.4)
Requirement already satisfied: pillow>=4.1.1 in /home/jlpkort/anaconda3/lib/python3.8/site-packages (from torchvision==0.6.0+cu101) (8.2.0)
ERROR: Could not find a version that satisfies the requirement opencv_contrib_python_nonfree==4.1.1.1
ERROR: No matching distribution found for opencv_contrib_python_nonfree==4.1.1.1
wandb: Currently logged in as: tijmenk_ (use `wandb login --relogin` to force relogin)
DATASET:
  CONT_ROOT: ./datasets/CelebAMask-HQ
  IMAGENET: ./datasets/ImageNet/
  MEAN: [0.5, 0.5, 0.5]
  NAME: FFHQ
  RAINDROP_ROOT: ./datasets/raindrop/train20/train
  ROOT: ./datasets/ffhq/images1024x1024
  SIZE: 256
  STD: [0.5, 0.5, 0.5]
MASK:
  ANGLE_RANGE: 0.20943951023931953
  GAUS_K_SIZE: 15
  MAX_NUM_VERTEX: 24
  MAX_REMOVAL_RATIO: 0.5
  MAX_WIDTH: 16
  MEAN_ANGLE: 1.2566370614359172
  MIN_NUM_VERTEX: 8
  MIN_REMOVAL_RATIO: 0.2
  MIN_WIDTH: 8
  NUM_ITER_SMOOTHING: 3
  SIGMA: 4
MODEL:
  D:
    BETAS: (0.5, 0.9)
    DECAY_RATE: 0.5
    LR: 0.001
    NAME: 1-ChOutputDiscriminator
    NUM_CHANNELS: 64
    NUM_CRITICS: 5
    SCHEDULER: []
  IS_TRAIN: True
  JOINT:
    BETAS: (0.5, 0.9)
    DECAY_RATE: 0.5
    LR: 0.0002
    NAME: JointNetwork
    SCHEDULER: []
  MPN:
    BETAS: (0.5, 0.9)
    DECAY_RATE: 0.0
    LOSS_COEFF: 2.0
    LR: 0.001
    NAME: MaskPredictionNetwork
    NECK_CHANNELS: 128
    NUM_CHANNELS: 64
    SCHEDULER: []
  NAME: VCNet
  RAINDROP_LOG_INTERVAL: 20
  RAINDROP_SAVE_INTERVAL: 200
  RAINDROP_TUNE: False
  RAINDROP_VISUALIZE_INTERVAL: 20
  RAINDROP_WEIGHTS: 
  RIN:
    BETAS: (0.5, 0.9)
    DECAY_RATE: 0.0
    EMBRACE: True
    LOSS_COEFF: 1.0
    LR: 0.0001
    NAME: RobustInpaintingNetwork
    NECK_CHANNELS: 128
    NUM_CHANNELS: 32
    SCHEDULER: []
OPTIM:
  ADVERSARIAL: 0.001
  GP: 10
  MASK: 1
  RECON: 1.4
  SEMANTIC: 0.0001
  TEXTURE: 0.001
SYSTEM:
  NUM_GPU: 1
  NUM_WORKERS: 4
TEST:
  ABLATION: False
  BATCH_SIZE: 64
  BRUSH_COLOR: RED
  C_IMG_ID: 38
  FONT: /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
  FONT_SIZE: 24
  GRAFFITI_PATH: ./datasets/graffiti-dataset/dataset/graffiti_sample/000001ff0013ffff.p
  IMG_ID: 52
  ITER: 4
  MODE: 7
  OUTPUT_DIR: ./outputs
  TEXT: hello world
  WEIGHTS: None
TRAIN:
  BATCH_SIZE: 4
  LOG_INTERVAL: 200
  NUM_STEPS_FOR_JOINT: 20000
  NUM_TOTAL_STEP: 302000
  RESUME: True
  SAVE_DIR: ./weights
  SAVE_INTERVAL: 10000
  SHUFFLE: True
  START_STEP: 0
  TUNE: False
  VISUALIZE_INTERVAL: 200
WANDB:
  ENTITY: tijmenk_
  LOG_DIR: 
  NUM_ROW: 0
  PROJECT_NAME: thesis_pytorch
  RUN: 16
wandb: Tracking run with wandb version 0.11.0
wandb: Resuming run sunny-lion-6
wandb:  View project at https://wandb.ai/tijmenk_/thesis_pytorch
wandb:  View run at https://wandb.ai/tijmenk_/thesis_pytorch/runs/2n2bwzhq
wandb: Run data is saved locally in /home/jlpkort/vcnet-blind-image-inpainting/wandb/run-20210722_161449-2n2bwzhq
wandb: Run `wandb offline` to turn off syncing.
I0722 16:15:36.983136 453 trainer.py:255] GPU ID: 0

!Starts of masks function
TYPE:  <class 'torch.Tensor'>
SIZE:  torch.Size([1, 3, 256, 256])
MASKS:  tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]])
!End of masks function
BATCH:  4 
CHANNELS:  3 
HxW:  256 256
TYPE:  <class 'torch.Tensor'>
SIZE:  torch.Size([4, 3, 256, 256])
MASKS:  tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]], device='cuda:0')
Traceback (most recent call last):
  File "main.py", line 52, in <module>
    trainer.run()
  File "/home/jlpkort/vcnet-blind-image-inpainting/engine/trainer.py", line 119, in run
    smooth_masks = self.mask_smoother(1 - masks) + masks
  File "/home/jlpkort/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/jlpkort/vcnet-blind-image-inpainting/utils/mask_utils.py", line 136, in forward
    mask_confidence = self.propagation_layer(init)
  File "/home/jlpkort/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/jlpkort/vcnet-blind-image-inpainting/utils/mask_utils.py", line 119, in forward
    blurred = F.conv2d(x, kernel_tensor, stride=self.stride)
RuntimeError: Given groups=1, weight of size [1, 1, 15, 15], expected input[4, 3, 270, 270] to have 1 channels, but got 3 channels instead
wandb: Waiting for W&B process to finish, PID 514
wandb: Program failed with code 1.  Press ctrl-c to abort syncing.
wandb: - 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: \ 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: | 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: / 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: - 0.00MB of 0.01MB uploaded (0.00MB deduped)wandb: \ 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: | 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: / 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: - 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: \ 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: | 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: / 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: - 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb:                                                                                
wandb: Find user logs for this run at: /home/jlpkort/vcnet-blind-image-inpainting/wandb/run-20210722_161449-2n2bwzhq/logs/debug.log
wandb: Find internal logs for this run at: /home/jlpkort/vcnet-blind-image-inpainting/wandb/run-20210722_161449-2n2bwzhq/logs/debug-internal.log
wandb: Run summary:
wandb:         tex_const_loss 62.39108
wandb:   fake_global_validity 330.81219
wandb:                  _step 3
wandb:                gp_fake 52.72545
wandb:             _timestamp 1626959481
wandb:          fake_validity 573.47064
wandb:               _runtime 143
wandb:    fake_patch_validity 242.65843
wandb:          real_validity -3428.25269
wandb:         adv_patch_loss -254.17105
wandb:         sem_const_loss 0.60483
wandb:    real_patch_validity -1490.10229
wandb:                     gp 122.12708
wandb:                 m_loss 0.21523
wandb:              gp_global 69.40163
wandb:             recon_loss 0.37871
wandb:               adv_loss -578.40356
wandb:        adv_global_loss -324.23254
wandb:   real_global_validity -1938.15039
wandb: Synced 3 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: 
wandb: Synced sunny-lion-6: https://wandb.ai/tijmenk_/thesis_pytorch/runs/2n2bwzhq

